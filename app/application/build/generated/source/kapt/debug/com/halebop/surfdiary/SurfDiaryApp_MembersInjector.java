// Generated by Dagger (https://dagger.dev).
package com.halebop.surfdiary;

import com.facebook.flipper.plugins.network.NetworkFlipperPlugin;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SurfDiaryApp_MembersInjector implements MembersInjector<SurfDiaryApp> {
  private final Provider<NetworkFlipperPlugin> networkFlipperPluginProvider;

  public SurfDiaryApp_MembersInjector(Provider<NetworkFlipperPlugin> networkFlipperPluginProvider) {
    this.networkFlipperPluginProvider = networkFlipperPluginProvider;
  }

  public static MembersInjector<SurfDiaryApp> create(
      Provider<NetworkFlipperPlugin> networkFlipperPluginProvider) {
    return new SurfDiaryApp_MembersInjector(networkFlipperPluginProvider);
  }

  @Override
  public void injectMembers(SurfDiaryApp instance) {
    injectNetworkFlipperPlugin(instance, networkFlipperPluginProvider.get());
  }

  @InjectedFieldSignature("com.halebop.surfdiary.SurfDiaryApp.networkFlipperPlugin")
  public static void injectNetworkFlipperPlugin(SurfDiaryApp instance,
      NetworkFlipperPlugin networkFlipperPlugin) {
    instance.networkFlipperPlugin = networkFlipperPlugin;
  }
}
