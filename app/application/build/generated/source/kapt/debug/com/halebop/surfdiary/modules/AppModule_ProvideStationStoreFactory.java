// Generated by Dagger (https://dagger.dev).
package com.halebop.surfdiary.modules;

import com.dropbox.android.external.store4.Store;
import com.halebop.network.NetworkServicesFactory;
import com.halebop.surfdiary.NOAADataSource;
import com.halebop.web_types.Station;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.List;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideStationStoreFactory implements Factory<Store<Long, List<Station>>> {
  private final AppModule module;

  private final Provider<NetworkServicesFactory> factoryProvider;

  private final Provider<NOAADataSource> dataStoreProvider;

  public AppModule_ProvideStationStoreFactory(AppModule module,
      Provider<NetworkServicesFactory> factoryProvider,
      Provider<NOAADataSource> dataStoreProvider) {
    this.module = module;
    this.factoryProvider = factoryProvider;
    this.dataStoreProvider = dataStoreProvider;
  }

  @Override
  public Store<Long, List<Station>> get() {
    return provideStationStore(module, factoryProvider.get(), dataStoreProvider.get());
  }

  public static AppModule_ProvideStationStoreFactory create(AppModule module,
      Provider<NetworkServicesFactory> factoryProvider,
      Provider<NOAADataSource> dataStoreProvider) {
    return new AppModule_ProvideStationStoreFactory(module, factoryProvider, dataStoreProvider);
  }

  public static Store<Long, List<Station>> provideStationStore(AppModule instance,
      NetworkServicesFactory factory, NOAADataSource dataStore) {
    return Preconditions.checkNotNullFromProvides(instance.provideStationStore(factory, dataStore));
  }
}
