// Generated by Dagger (https://dagger.dev).
package com.halebop.surfdiary.modules;

import com.halebop.surfdiary.NOAADataSource;
import com.squareup.sqldelight.android.AndroidSqliteDriver;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideNOAADataSourceFactory implements Factory<NOAADataSource> {
  private final AppModule module;

  private final Provider<AndroidSqliteDriver> sqlDriverProvider;

  public AppModule_ProvideNOAADataSourceFactory(AppModule module,
      Provider<AndroidSqliteDriver> sqlDriverProvider) {
    this.module = module;
    this.sqlDriverProvider = sqlDriverProvider;
  }

  @Override
  public NOAADataSource get() {
    return provideNOAADataSource(module, sqlDriverProvider.get());
  }

  public static AppModule_ProvideNOAADataSourceFactory create(AppModule module,
      Provider<AndroidSqliteDriver> sqlDriverProvider) {
    return new AppModule_ProvideNOAADataSourceFactory(module, sqlDriverProvider);
  }

  public static NOAADataSource provideNOAADataSource(AppModule instance,
      AndroidSqliteDriver sqlDriver) {
    return Preconditions.checkNotNullFromProvides(instance.provideNOAADataSource(sqlDriver));
  }
}
